load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_app",
    "rabbitmq_integration_suite",
    "rabbitmq_suite",
)

APP_NAME = "amqp10_client"

APP_DESCRIPTION = "AMQP 1.0 client from the RabbitMQ Project"

APP_MODULE = "amqp10_client_app"

APP_EXTRA_KEYS = """%% Hex.pm package informations.
	{licenses, ["MPL-2.0"]},
	{links, [
	    {"Website", "https://www.rabbitmq.com/"},
	    {"GitHub", "https://github.com/rabbitmq/rabbitmq-server/deps/amqp10_client"}
	  ]},
	{build_tools, ["make", "rebar3"]},
	{files, [
	    "erlang.mk",
	    "git-revisions.txt",
	    "include",
	    "LICENSE*",
	    "Makefile",
	    "rabbitmq-components.mk",
	    "README",
	    "README.md",
	    "src"
	  ]}
"""

EXTRA_APPS = [
    "public_key",
    "ssl",
    "inets",
    "crypto",
]

BUILD_DEPS = [
    "//deps/rabbit_common:erlang_app",
]

DEPS = [
    "//deps/amqp10_common:erlang_app",
]

rabbitmq_app(
    app_description = APP_DESCRIPTION,
    app_extra_keys = APP_EXTRA_KEYS,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    build_deps = BUILD_DEPS,
    extra_apps = EXTRA_APPS,
    deps = DEPS,
)

xref()

plt(
    name = "base_plt",
    apps = EXTRA_APPS,
    plt = "//:base_plt",
    deps = BUILD_DEPS + DEPS,
)

dialyze(
    plt = ":base_plt",
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
)

broker_for_integration_suites(
    extra_plugins = ["//deps/rabbitmq_amqp1_0:erlang_app"],
)

rabbitmq_suite(
    name = "msg_SUITE",
    deps = DEPS,
)

rabbitmq_integration_suite(
    name = "system_SUITE",
    size = "medium",
    additional_hdrs = [
        "src/amqp10_client.hrl",
    ],
    additional_srcs = [
        "test/activemq_ct_helpers.erl",
        "test/mock_server.erl",
    ],
    data = [
        "@activemq//:exec_dir",
    ],
    erlc_opts = [
        "-I",
        "deps/amqp10_client",
    ],
    test_env = {
        "ACTIVEMQ": "$TEST_SRCDIR/$TEST_WORKSPACE/external/activemq/bin/activemq",
    },
    deps = DEPS,
)

assert_suites()

alias(
    name = "amqp10_client",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
