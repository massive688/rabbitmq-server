load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load("//:rabbitmq_home.bzl", "rabbitmq_home")
load("//:rabbitmq_run.bzl", "rabbitmq_run")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "rabbitmq_app",
    "rabbitmq_integration_suite",
    "rabbitmq_suite",
)

APP_ENV = """[
	    {prefer_ipv6, false},
	    {ssl_options, []},
	    {writer_gc_threshold, 1000000000}
	  ]"""

APP_EXTRA_KEYS = """%% Hex.pm package informations.
	{licenses, ["MPL-2.0"]},
	{links, [
	    {"Website", "https://www.rabbitmq.com/"},
	    {"GitHub", "https://github.com/rabbitmq/rabbitmq-server/deps/amqp_client"},
	    {"User guide", "https://www.rabbitmq.com/erlang-client-user-guide.html"}
	  ]},
	{build_tools, ["make", "rebar3"]},
	{files, [
	    "erlang.mk",
	    "git-revisions.txt",
	    "include",
	    "LICENSE*",
	    "Makefile",
	    "rabbitmq-components.mk",
	    "README",
	    "README.md"
	  ]}
"""

EXTRA_APPS = [
    "xmerl",
    "ssl",
    "public_key",
]

DEPS = [
    "//deps/rabbit_common:erlang_app",
]

rabbitmq_app(
    app_description = "RabbitMQ AMQP Client",
    app_env = APP_ENV,
    app_extra_keys = APP_EXTRA_KEYS,
    app_module = "amqp_client",
    app_name = "amqp_client",
    app_registered = [
        "amqp_sup",
    ],
    extra_apps = EXTRA_APPS,
    deps = DEPS,
)

xref()

plt(
    name = "base_plt",
    apps = EXTRA_APPS,
    plt = "//:base_plt",
    deps = DEPS,
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
)

rabbitmq_home(
    name = "broker-for-tests-home",
    plugins = [
        "//deps/rabbit:erlang_app",
    ],
)

rabbitmq_run(
    name = "rabbitmq-for-tests-run",
    home = ":broker-for-tests-home",
)

rabbitmq_integration_suite(
    name = "system_SUITE",
    size = "large",
    runtime_deps = [
        "@meck//:erlang_app",
    ],
)

rabbitmq_suite(
    name = "unit_SUITE",
    size = "small",
    runtime_deps = [
        "//deps/rabbit:erlang_app",
    ],
    deps = [
        "//deps/rabbit_common:erlang_app",
    ],
)

assert_suites()

alias(
    name = "amqp_client",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
