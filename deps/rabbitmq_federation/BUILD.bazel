load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load(
    "//:rabbitmq.bzl",
    "BROKER_VERSION_REQUIREMENTS_ANY",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_app",
    "rabbitmq_integration_suite",
    "rabbitmq_suite",
    "rabbitmq_test_helper",
)

APP_NAME = "rabbitmq_federation"

APP_DESCRIPTION = "RabbitMQ Federation"

APP_MODULE = "rabbit_federation_app"

APP_ENV = """[
	    {pgroup_name_cluster_id, false},
	    {internal_exchange_check_interval, 90000}
	  ]"""

BUILD_DEPS = [
    "//deps/rabbitmq_cli:erlang_app",
]

DEPS = [
    "//deps/amqp_client:erlang_app",
    "//deps/rabbit_common:erlang_app",
    "//deps/rabbit:erlang_app",
]

rabbitmq_app(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_extra_keys = BROKER_VERSION_REQUIREMENTS_ANY,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    build_deps = BUILD_DEPS,
    deps = DEPS,
)

xref(
    additional_libs = BUILD_DEPS,
)

plt(
    name = "base_plt",
    plt = "//:base_plt",
    libs = ["//deps/rabbitmq_cli:elixir"],
    deps = ["//deps/rabbitmq_cli:elixir"] + BUILD_DEPS + DEPS,
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
)

broker_for_integration_suites()

rabbitmq_test_helper(
    name = "rabbit_federation_test_util",
    srcs = [
        "test/rabbit_federation_test_util.erl",
    ],
    hdrs = glob([
        "include/**/*.hrl",
        "src/**/*.hrl",
    ]),
    deps = [
        ":test_erlang_app",
        "//deps/amqp_client:erlang_app",
        "//deps/rabbit_common:erlang_app",
    ],
)

rabbitmq_integration_suite(
    name = "exchange_SUITE",
    size = "large",
    additional_beam = [
        ":rabbit_federation_test_util",
    ],
    flaky = True,
    shard_count = 2,
)

rabbitmq_integration_suite(
    name = "federation_status_command_SUITE",
    additional_beam = [
        ":rabbit_federation_test_util",
    ],
)

rabbitmq_integration_suite(
    name = "queue_SUITE",
    additional_beam = [
        ":rabbit_federation_test_util",
    ],
    flaky = True,
    shard_count = 6,
)

rabbitmq_integration_suite(
    name = "rabbit_federation_status_SUITE",
    additional_beam = [
        ":rabbit_federation_test_util",
        ":exchange_SUITE_beam_files",
        ":queue_SUITE_beam_files",
    ],
)

rabbitmq_integration_suite(
    name = "restart_federation_link_command_SUITE",
    additional_beam = [
        ":rabbit_federation_test_util",
    ],
)

rabbitmq_integration_suite(
    name = "unit_inbroker_SUITE",
)

rabbitmq_suite(
    name = "unit_SUITE",
    deps = [
        "//deps/amqp_client:erlang_app",
        "//deps/rabbit_common:erlang_app",
    ],
)

assert_suites()

alias(
    name = "rabbitmq_federation",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
