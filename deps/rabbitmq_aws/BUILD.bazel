load("@rules_erlang//:eunit.bzl", "eunit")
load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load("//:rabbitmq.bzl",
     "RABBITMQ_DIALYZER_OPTS",
     "RABBITMQ_TEST_ERLC_OPTS",
     "rabbitmq_app",
)

APP_NAME = "rabbitmq_aws"

APP_DESCRIPTION = "A minimalistic AWS API interface used by rabbitmq-autocluster (3.6.x) and other RabbitMQ plugins"

APP_MODULE = "rabbitmq_aws_app"

APP_REGISTERED = [
    "rabbitmq_aws",
]

EXTRA_APPS = [
    "crypto",
    "inets",
    "public_key",
    "ssl",
    "xmerl",
]

BUILD_DEPS = [
    "//deps/rabbit_common:erlang_app",
]

rabbitmq_app(
    app_description = APP_DESCRIPTION,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_registered = APP_REGISTERED,
    build_deps = BUILD_DEPS,
    extra_apps = EXTRA_APPS,
)

xref(
    additional_libs = [
        "//deps/rabbit_common:erlang_app",
    ],
)

plt(
    name = "base_plt",
    apps = EXTRA_APPS,
    plt = "//:base_plt",
    deps = BUILD_DEPS,
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
)

eunit(
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS + [
        "-I",
        "deps/rabbitmq_aws",
        "+nowarn_export_all",
    ],
    runtime_deps = [
        "//deps/rabbit_common:erlang_app",
        "@meck//:erlang_app",
        "@thoas//:erlang_app",
    ],
)
